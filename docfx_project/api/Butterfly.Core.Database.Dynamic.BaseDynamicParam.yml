### YamlMime:ManagedReference
items:
- uid: Butterfly.Core.Database.Dynamic.BaseDynamicParam
  commentId: T:Butterfly.Core.Database.Dynamic.BaseDynamicParam
  id: BaseDynamicParam
  parent: Butterfly.Core.Database.Dynamic
  children:
  - Butterfly.Core.Database.Dynamic.BaseDynamicParam.#ctor(System.String)
  - Butterfly.Core.Database.Dynamic.BaseDynamicParam.Clear
  - Butterfly.Core.Database.Dynamic.BaseDynamicParam.Dirty
  - Butterfly.Core.Database.Dynamic.BaseDynamicParam.GetValue
  - Butterfly.Core.Database.Dynamic.BaseDynamicParam.logger
  - Butterfly.Core.Database.Dynamic.BaseDynamicParam.name
  - Butterfly.Core.Database.Dynamic.BaseDynamicParam.ResetDirty
  - Butterfly.Core.Database.Dynamic.BaseDynamicParam.SetDirty
  langs:
  - csharp
  - vb
  name: BaseDynamicParam
  nameWithType: BaseDynamicParam
  fullName: Butterfly.Core.Database.Dynamic.BaseDynamicParam
  type: Class
  source:
    remote:
      path: Butterfly.Core/Database/Dynamic/BaseDynamicParam.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: BaseDynamicParam
    path: ../Butterfly.Core/Database/Dynamic/BaseDynamicParam.cs
    startLine: 10
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Database.Dynamic
  summary: "\nBase class for implementing dynamic params (see <xref href=\"Butterfly.Core.Database.IDynamicParam\" data-throw-if-not-resolved=\"false\"></xref>)\n"
  example: []
  syntax:
    content: 'public abstract class BaseDynamicParam : object, IDynamicParam'
    content.vb: >-
      Public MustInherit Class BaseDynamicParam
          Inherits Object
          Implements IDynamicParam
  inheritance:
  - System.Object
  derivedClasses:
  - Butterfly.Core.Database.Dynamic.MultiValueDynamicParam
  - Butterfly.Core.Database.Dynamic.SingleValueDynamicParam
  implements:
  - Butterfly.Core.Database.IDynamicParam
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Butterfly.Core.Database.Dynamic.BaseDynamicParam.logger
  commentId: F:Butterfly.Core.Database.Dynamic.BaseDynamicParam.logger
  id: logger
  parent: Butterfly.Core.Database.Dynamic.BaseDynamicParam
  langs:
  - csharp
  - vb
  name: logger
  nameWithType: BaseDynamicParam.logger
  fullName: Butterfly.Core.Database.Dynamic.BaseDynamicParam.logger
  type: Field
  source:
    remote:
      path: Butterfly.Core/Database/Dynamic/BaseDynamicParam.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: logger
    path: ../Butterfly.Core/Database/Dynamic/BaseDynamicParam.cs
    startLine: 11
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Database.Dynamic
  syntax:
    content: protected static readonly Logger logger
    return:
      type: Logger
    content.vb: Protected Shared ReadOnly logger As Logger
  modifiers.csharp:
  - protected
  - static
  - readonly
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Butterfly.Core.Database.Dynamic.BaseDynamicParam.name
  commentId: F:Butterfly.Core.Database.Dynamic.BaseDynamicParam.name
  id: name
  parent: Butterfly.Core.Database.Dynamic.BaseDynamicParam
  langs:
  - csharp
  - vb
  name: name
  nameWithType: BaseDynamicParam.name
  fullName: Butterfly.Core.Database.Dynamic.BaseDynamicParam.name
  type: Field
  source:
    remote:
      path: Butterfly.Core/Database/Dynamic/BaseDynamicParam.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: name
    path: ../Butterfly.Core/Database/Dynamic/BaseDynamicParam.cs
    startLine: 15
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Database.Dynamic
  syntax:
    content: public readonly string name
    return:
      type: System.String
    content.vb: Public ReadOnly name As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Butterfly.Core.Database.Dynamic.BaseDynamicParam.#ctor(System.String)
  commentId: M:Butterfly.Core.Database.Dynamic.BaseDynamicParam.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Butterfly.Core.Database.Dynamic.BaseDynamicParam
  langs:
  - csharp
  - vb
  name: BaseDynamicParam(String)
  nameWithType: BaseDynamicParam.BaseDynamicParam(String)
  fullName: Butterfly.Core.Database.Dynamic.BaseDynamicParam.BaseDynamicParam(System.String)
  type: Constructor
  source:
    remote:
      path: Butterfly.Core/Database/Dynamic/BaseDynamicParam.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: .ctor
    path: ../Butterfly.Core/Database/Dynamic/BaseDynamicParam.cs
    startLine: 18
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Database.Dynamic
  syntax:
    content: public BaseDynamicParam(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub New(name As String)
  overload: Butterfly.Core.Database.Dynamic.BaseDynamicParam.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Butterfly.Core.Database.Dynamic.BaseDynamicParam.Dirty
  commentId: P:Butterfly.Core.Database.Dynamic.BaseDynamicParam.Dirty
  id: Dirty
  parent: Butterfly.Core.Database.Dynamic.BaseDynamicParam
  langs:
  - csharp
  - vb
  name: Dirty
  nameWithType: BaseDynamicParam.Dirty
  fullName: Butterfly.Core.Database.Dynamic.BaseDynamicParam.Dirty
  type: Property
  source:
    remote:
      path: Butterfly.Core/Database/Dynamic/BaseDynamicParam.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: Dirty
    path: ../Butterfly.Core/Database/Dynamic/BaseDynamicParam.cs
    startLine: 22
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Database.Dynamic
  syntax:
    content: public bool Dirty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Dirty As Boolean
  overload: Butterfly.Core.Database.Dynamic.BaseDynamicParam.Dirty*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Butterfly.Core.Database.Dynamic.BaseDynamicParam.SetDirty
  commentId: M:Butterfly.Core.Database.Dynamic.BaseDynamicParam.SetDirty
  id: SetDirty
  parent: Butterfly.Core.Database.Dynamic.BaseDynamicParam
  langs:
  - csharp
  - vb
  name: SetDirty()
  nameWithType: BaseDynamicParam.SetDirty()
  fullName: Butterfly.Core.Database.Dynamic.BaseDynamicParam.SetDirty()
  type: Method
  source:
    remote:
      path: Butterfly.Core/Database/Dynamic/BaseDynamicParam.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: SetDirty
    path: ../Butterfly.Core/Database/Dynamic/BaseDynamicParam.cs
    startLine: 24
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Database.Dynamic
  syntax:
    content: protected void SetDirty()
    content.vb: Protected Sub SetDirty
  overload: Butterfly.Core.Database.Dynamic.BaseDynamicParam.SetDirty*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Butterfly.Core.Database.Dynamic.BaseDynamicParam.ResetDirty
  commentId: M:Butterfly.Core.Database.Dynamic.BaseDynamicParam.ResetDirty
  id: ResetDirty
  parent: Butterfly.Core.Database.Dynamic.BaseDynamicParam
  langs:
  - csharp
  - vb
  name: ResetDirty()
  nameWithType: BaseDynamicParam.ResetDirty()
  fullName: Butterfly.Core.Database.Dynamic.BaseDynamicParam.ResetDirty()
  type: Method
  source:
    remote:
      path: Butterfly.Core/Database/Dynamic/BaseDynamicParam.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: ResetDirty
    path: ../Butterfly.Core/Database/Dynamic/BaseDynamicParam.cs
    startLine: 29
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Database.Dynamic
  syntax:
    content: public void ResetDirty()
    content.vb: Public Sub ResetDirty
  overload: Butterfly.Core.Database.Dynamic.BaseDynamicParam.ResetDirty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Butterfly.Core.Database.Dynamic.BaseDynamicParam.Clear
  commentId: M:Butterfly.Core.Database.Dynamic.BaseDynamicParam.Clear
  id: Clear
  parent: Butterfly.Core.Database.Dynamic.BaseDynamicParam
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: BaseDynamicParam.Clear()
  fullName: Butterfly.Core.Database.Dynamic.BaseDynamicParam.Clear()
  type: Method
  source:
    remote:
      path: Butterfly.Core/Database/Dynamic/BaseDynamicParam.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: Clear
    path: ../Butterfly.Core/Database/Dynamic/BaseDynamicParam.cs
    startLine: 34
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Database.Dynamic
  syntax:
    content: public abstract void Clear()
    content.vb: Public MustOverride Sub Clear
  overload: Butterfly.Core.Database.Dynamic.BaseDynamicParam.Clear*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Butterfly.Core.Database.Dynamic.BaseDynamicParam.GetValue
  commentId: M:Butterfly.Core.Database.Dynamic.BaseDynamicParam.GetValue
  id: GetValue
  parent: Butterfly.Core.Database.Dynamic.BaseDynamicParam
  langs:
  - csharp
  - vb
  name: GetValue()
  nameWithType: BaseDynamicParam.GetValue()
  fullName: Butterfly.Core.Database.Dynamic.BaseDynamicParam.GetValue()
  type: Method
  source:
    remote:
      path: Butterfly.Core/Database/Dynamic/BaseDynamicParam.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: GetValue
    path: ../Butterfly.Core/Database/Dynamic/BaseDynamicParam.cs
    startLine: 36
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Database.Dynamic
  syntax:
    content: public abstract object GetValue()
    return:
      type: System.Object
    content.vb: Public MustOverride Function GetValue As Object
  overload: Butterfly.Core.Database.Dynamic.BaseDynamicParam.GetValue*
  implements:
  - Butterfly.Core.Database.IDynamicParam.GetValue
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Butterfly.Core.Database.IDynamicParam
  commentId: T:Butterfly.Core.Database.IDynamicParam
  parent: Butterfly.Core.Database
  name: IDynamicParam
  nameWithType: IDynamicParam
  fullName: Butterfly.Core.Database.IDynamicParam
- uid: Butterfly.Core.Database.Dynamic
  commentId: N:Butterfly.Core.Database.Dynamic
  name: Butterfly.Core.Database.Dynamic
  nameWithType: Butterfly.Core.Database.Dynamic
  fullName: Butterfly.Core.Database.Dynamic
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Butterfly.Core.Database
  commentId: N:Butterfly.Core.Database
  name: Butterfly.Core.Database
  nameWithType: Butterfly.Core.Database
  fullName: Butterfly.Core.Database
- uid: Logger
  isExternal: true
  name: Logger
  nameWithType: Logger
  fullName: Logger
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Butterfly.Core.Database.Dynamic.BaseDynamicParam.#ctor*
  commentId: Overload:Butterfly.Core.Database.Dynamic.BaseDynamicParam.#ctor
  name: BaseDynamicParam
  nameWithType: BaseDynamicParam.BaseDynamicParam
  fullName: Butterfly.Core.Database.Dynamic.BaseDynamicParam.BaseDynamicParam
- uid: Butterfly.Core.Database.Dynamic.BaseDynamicParam.Dirty*
  commentId: Overload:Butterfly.Core.Database.Dynamic.BaseDynamicParam.Dirty
  name: Dirty
  nameWithType: BaseDynamicParam.Dirty
  fullName: Butterfly.Core.Database.Dynamic.BaseDynamicParam.Dirty
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Butterfly.Core.Database.Dynamic.BaseDynamicParam.SetDirty*
  commentId: Overload:Butterfly.Core.Database.Dynamic.BaseDynamicParam.SetDirty
  name: SetDirty
  nameWithType: BaseDynamicParam.SetDirty
  fullName: Butterfly.Core.Database.Dynamic.BaseDynamicParam.SetDirty
- uid: Butterfly.Core.Database.Dynamic.BaseDynamicParam.ResetDirty*
  commentId: Overload:Butterfly.Core.Database.Dynamic.BaseDynamicParam.ResetDirty
  name: ResetDirty
  nameWithType: BaseDynamicParam.ResetDirty
  fullName: Butterfly.Core.Database.Dynamic.BaseDynamicParam.ResetDirty
- uid: Butterfly.Core.Database.Dynamic.BaseDynamicParam.Clear*
  commentId: Overload:Butterfly.Core.Database.Dynamic.BaseDynamicParam.Clear
  name: Clear
  nameWithType: BaseDynamicParam.Clear
  fullName: Butterfly.Core.Database.Dynamic.BaseDynamicParam.Clear
- uid: Butterfly.Core.Database.Dynamic.BaseDynamicParam.GetValue*
  commentId: Overload:Butterfly.Core.Database.Dynamic.BaseDynamicParam.GetValue
  name: GetValue
  nameWithType: BaseDynamicParam.GetValue
  fullName: Butterfly.Core.Database.Dynamic.BaseDynamicParam.GetValue
- uid: Butterfly.Core.Database.IDynamicParam.GetValue
  commentId: M:Butterfly.Core.Database.IDynamicParam.GetValue
  parent: Butterfly.Core.Database.IDynamicParam
  name: GetValue()
  nameWithType: IDynamicParam.GetValue()
  fullName: Butterfly.Core.Database.IDynamicParam.GetValue()
  spec.csharp:
  - uid: Butterfly.Core.Database.IDynamicParam.GetValue
    name: GetValue
    nameWithType: IDynamicParam.GetValue
    fullName: Butterfly.Core.Database.IDynamicParam.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Butterfly.Core.Database.IDynamicParam.GetValue
    name: GetValue
    nameWithType: IDynamicParam.GetValue
    fullName: Butterfly.Core.Database.IDynamicParam.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
