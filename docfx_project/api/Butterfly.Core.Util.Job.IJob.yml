### YamlMime:ManagedReference
items:
- uid: Butterfly.Core.Util.Job.IJob
  commentId: T:Butterfly.Core.Util.Job.IJob
  id: IJob
  parent: Butterfly.Core.Util.Job
  children:
  - Butterfly.Core.Util.Job.IJob.Run
  langs:
  - csharp
  - vb
  name: IJob
  nameWithType: IJob
  fullName: Butterfly.Core.Util.Job.IJob
  type: Interface
  source:
    remote:
      path: Butterfly.Core/Util/Job/Job.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-server-dotnet
    id: IJob
    path: ../Butterfly.Core/Util/Job/Job.cs
    startLine: 8
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Util.Job
  syntax:
    content: public interface IJob
    content.vb: Public Interface IJob
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Butterfly.Core.Util.Job.IJob.Run
  commentId: M:Butterfly.Core.Util.Job.IJob.Run
  id: Run
  parent: Butterfly.Core.Util.Job.IJob
  langs:
  - csharp
  - vb
  name: Run()
  nameWithType: IJob.Run()
  fullName: Butterfly.Core.Util.Job.IJob.Run()
  type: Method
  source:
    remote:
      path: Butterfly.Core/Util/Job/Job.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-server-dotnet
    id: Run
    path: ../Butterfly.Core/Util/Job/Job.cs
    startLine: 9
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Util.Job
  syntax:
    content: Task<DateTime? > Run()
    return:
      type: Task{System.Nullable{DateTime}}
    content.vb: Function Run As Task(Of DateTime?)
  overload: Butterfly.Core.Util.Job.IJob.Run*
references:
- uid: Butterfly.Core.Util.Job
  commentId: N:Butterfly.Core.Util.Job
  name: Butterfly.Core.Util.Job
  nameWithType: Butterfly.Core.Util.Job
  fullName: Butterfly.Core.Util.Job
- uid: Butterfly.Core.Util.Job.IJob.Run*
  commentId: Overload:Butterfly.Core.Util.Job.IJob.Run
  name: Run
  nameWithType: IJob.Run
  fullName: Butterfly.Core.Util.Job.IJob.Run
- uid: Task{System.Nullable{DateTime}}
  commentId: '!:Task{System.Nullable{DateTime}}'
  definition: Task`1
  name: Task<Nullable<DateTime>>
  nameWithType: Task<Nullable<DateTime>>
  fullName: Task<System.Nullable<DateTime>>
  nameWithType.vb: Task(Of Nullable(Of DateTime))
  fullName.vb: Task(Of System.Nullable(Of DateTime))
  name.vb: Task(Of Nullable(Of DateTime))
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
