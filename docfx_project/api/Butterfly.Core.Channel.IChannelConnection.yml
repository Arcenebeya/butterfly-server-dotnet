### YamlMime:ManagedReference
items:
- uid: Butterfly.Core.Channel.IChannelConnection
  commentId: T:Butterfly.Core.Channel.IChannelConnection
  id: IChannelConnection
  parent: Butterfly.Core.Channel
  children:
  - Butterfly.Core.Channel.IChannelConnection.AuthToken
  - Butterfly.Core.Channel.IChannelConnection.Created
  - Butterfly.Core.Channel.IChannelConnection.Id
  - Butterfly.Core.Channel.IChannelConnection.LastHeartbeat
  - Butterfly.Core.Channel.IChannelConnection.QueueMessage(System.String,System.String,System.Object,System.Boolean)
  - Butterfly.Core.Channel.IChannelConnection.Start(System.Object,System.String)
  langs:
  - csharp
  - vb
  name: IChannelConnection
  nameWithType: IChannelConnection
  fullName: Butterfly.Core.Channel.IChannelConnection
  type: Interface
  source:
    remote:
      path: Butterfly.Core/Channel/IChannelConnection.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: IChannelConnection
    path: ../Butterfly.Core/Channel/IChannelConnection.cs
    startLine: 10
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Channel
  summary: "\nInternal interface representing a communications channel from the server to the client (might be implemented via WebSockets, HTTP long polling, etc)\n"
  example: []
  syntax:
    content: 'public interface IChannelConnection : IDisposable'
    content.vb: >-
      Public Interface IChannelConnection

          Inherits IDisposable
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Butterfly.Core.Channel.IChannelConnection.AuthToken
  commentId: P:Butterfly.Core.Channel.IChannelConnection.AuthToken
  id: AuthToken
  parent: Butterfly.Core.Channel.IChannelConnection
  langs:
  - csharp
  - vb
  name: AuthToken
  nameWithType: IChannelConnection.AuthToken
  fullName: Butterfly.Core.Channel.IChannelConnection.AuthToken
  type: Property
  source:
    remote:
      path: Butterfly.Core/Channel/IChannelConnection.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: AuthToken
    path: ../Butterfly.Core/Channel/IChannelConnection.cs
    startLine: 11
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Channel
  syntax:
    content: object AuthToken { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly Property AuthToken As Object
  overload: Butterfly.Core.Channel.IChannelConnection.AuthToken*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Butterfly.Core.Channel.IChannelConnection.Id
  commentId: P:Butterfly.Core.Channel.IChannelConnection.Id
  id: Id
  parent: Butterfly.Core.Channel.IChannelConnection
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IChannelConnection.Id
  fullName: Butterfly.Core.Channel.IChannelConnection.Id
  type: Property
  source:
    remote:
      path: Butterfly.Core/Channel/IChannelConnection.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: Id
    path: ../Butterfly.Core/Channel/IChannelConnection.cs
    startLine: 12
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Channel
  syntax:
    content: string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Id As String
  overload: Butterfly.Core.Channel.IChannelConnection.Id*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Butterfly.Core.Channel.IChannelConnection.Created
  commentId: P:Butterfly.Core.Channel.IChannelConnection.Created
  id: Created
  parent: Butterfly.Core.Channel.IChannelConnection
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: IChannelConnection.Created
  fullName: Butterfly.Core.Channel.IChannelConnection.Created
  type: Property
  source:
    remote:
      path: Butterfly.Core/Channel/IChannelConnection.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: Created
    path: ../Butterfly.Core/Channel/IChannelConnection.cs
    startLine: 13
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Channel
  syntax:
    content: DateTime Created { get; }
    parameters: []
    return:
      type: DateTime
    content.vb: ReadOnly Property Created As DateTime
  overload: Butterfly.Core.Channel.IChannelConnection.Created*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Butterfly.Core.Channel.IChannelConnection.LastHeartbeat
  commentId: P:Butterfly.Core.Channel.IChannelConnection.LastHeartbeat
  id: LastHeartbeat
  parent: Butterfly.Core.Channel.IChannelConnection
  langs:
  - csharp
  - vb
  name: LastHeartbeat
  nameWithType: IChannelConnection.LastHeartbeat
  fullName: Butterfly.Core.Channel.IChannelConnection.LastHeartbeat
  type: Property
  source:
    remote:
      path: Butterfly.Core/Channel/IChannelConnection.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: LastHeartbeat
    path: ../Butterfly.Core/Channel/IChannelConnection.cs
    startLine: 14
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Channel
  syntax:
    content: DateTime LastHeartbeat { get; }
    parameters: []
    return:
      type: DateTime
    content.vb: ReadOnly Property LastHeartbeat As DateTime
  overload: Butterfly.Core.Channel.IChannelConnection.LastHeartbeat*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Butterfly.Core.Channel.IChannelConnection.Start(System.Object,System.String)
  commentId: M:Butterfly.Core.Channel.IChannelConnection.Start(System.Object,System.String)
  id: Start(System.Object,System.String)
  parent: Butterfly.Core.Channel.IChannelConnection
  langs:
  - csharp
  - vb
  name: Start(Object, String)
  nameWithType: IChannelConnection.Start(Object, String)
  fullName: Butterfly.Core.Channel.IChannelConnection.Start(System.Object, System.String)
  type: Method
  source:
    remote:
      path: Butterfly.Core/Channel/IChannelConnection.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: Start
    path: ../Butterfly.Core/Channel/IChannelConnection.cs
    startLine: 15
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Channel
  syntax:
    content: void Start(object authToken, string id)
    parameters:
    - id: authToken
      type: System.Object
    - id: id
      type: System.String
    content.vb: Sub Start(authToken As Object, id As String)
  overload: Butterfly.Core.Channel.IChannelConnection.Start*
- uid: Butterfly.Core.Channel.IChannelConnection.QueueMessage(System.String,System.String,System.Object,System.Boolean)
  commentId: M:Butterfly.Core.Channel.IChannelConnection.QueueMessage(System.String,System.String,System.Object,System.Boolean)
  id: QueueMessage(System.String,System.String,System.Object,System.Boolean)
  parent: Butterfly.Core.Channel.IChannelConnection
  langs:
  - csharp
  - vb
  name: QueueMessage(String, String, Object, Boolean)
  nameWithType: IChannelConnection.QueueMessage(String, String, Object, Boolean)
  fullName: Butterfly.Core.Channel.IChannelConnection.QueueMessage(System.String, System.String, System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: Butterfly.Core/Channel/IChannelConnection.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: QueueMessage
    path: ../Butterfly.Core/Channel/IChannelConnection.cs
    startLine: 16
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Channel
  syntax:
    content: void QueueMessage(string channelKey = null, string messageType = null, object data = null, bool immediate = false)
    parameters:
    - id: channelKey
      type: System.String
    - id: messageType
      type: System.String
    - id: data
      type: System.Object
    - id: immediate
      type: System.Boolean
    content.vb: Sub QueueMessage(channelKey As String = Nothing, messageType As String = Nothing, data As Object = Nothing, immediate As Boolean = False)
  overload: Butterfly.Core.Channel.IChannelConnection.QueueMessage*
references:
- uid: Butterfly.Core.Channel
  commentId: N:Butterfly.Core.Channel
  name: Butterfly.Core.Channel
  nameWithType: Butterfly.Core.Channel
  fullName: Butterfly.Core.Channel
- uid: Butterfly.Core.Channel.IChannelConnection.AuthToken*
  commentId: Overload:Butterfly.Core.Channel.IChannelConnection.AuthToken
  name: AuthToken
  nameWithType: IChannelConnection.AuthToken
  fullName: Butterfly.Core.Channel.IChannelConnection.AuthToken
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Butterfly.Core.Channel.IChannelConnection.Id*
  commentId: Overload:Butterfly.Core.Channel.IChannelConnection.Id
  name: Id
  nameWithType: IChannelConnection.Id
  fullName: Butterfly.Core.Channel.IChannelConnection.Id
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Butterfly.Core.Channel.IChannelConnection.Created*
  commentId: Overload:Butterfly.Core.Channel.IChannelConnection.Created
  name: Created
  nameWithType: IChannelConnection.Created
  fullName: Butterfly.Core.Channel.IChannelConnection.Created
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: Butterfly.Core.Channel.IChannelConnection.LastHeartbeat*
  commentId: Overload:Butterfly.Core.Channel.IChannelConnection.LastHeartbeat
  name: LastHeartbeat
  nameWithType: IChannelConnection.LastHeartbeat
  fullName: Butterfly.Core.Channel.IChannelConnection.LastHeartbeat
- uid: Butterfly.Core.Channel.IChannelConnection.Start*
  commentId: Overload:Butterfly.Core.Channel.IChannelConnection.Start
  name: Start
  nameWithType: IChannelConnection.Start
  fullName: Butterfly.Core.Channel.IChannelConnection.Start
- uid: Butterfly.Core.Channel.IChannelConnection.QueueMessage*
  commentId: Overload:Butterfly.Core.Channel.IChannelConnection.QueueMessage
  name: QueueMessage
  nameWithType: IChannelConnection.QueueMessage
  fullName: Butterfly.Core.Channel.IChannelConnection.QueueMessage
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
shouldSkipMarkup: true
