### YamlMime:ManagedReference
items:
- uid: Butterfly.Core.Database.StatementFromRef
  commentId: T:Butterfly.Core.Database.StatementFromRef
  id: StatementFromRef
  parent: Butterfly.Core.Database
  children:
  - Butterfly.Core.Database.StatementFromRef.#ctor(Butterfly.Core.Database.JoinType,Butterfly.Core.Database.Table,System.String,System.String)
  - Butterfly.Core.Database.StatementFromRef.FIRST_TABLE_REGEX
  - Butterfly.Core.Database.StatementFromRef.JOIN_REGEX
  - Butterfly.Core.Database.StatementFromRef.joinCondition
  - Butterfly.Core.Database.StatementFromRef.joinType
  - Butterfly.Core.Database.StatementFromRef.ParseFromRefs(Butterfly.Core.Database.IDatabase,System.String)
  - Butterfly.Core.Database.StatementFromRef.table
  - Butterfly.Core.Database.StatementFromRef.tableAlias
  - Butterfly.Core.Database.StatementFromRef.ToString
  langs:
  - csharp
  - vb
  name: StatementFromRef
  nameWithType: StatementFromRef
  fullName: Butterfly.Core.Database.StatementFromRef
  type: Class
  source:
    remote:
      path: Butterfly.Core/Database/Statements/BaseStatement.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-server-dotnet
    id: StatementFromRef
    path: ../Butterfly.Core/Database/Statements/BaseStatement.cs
    startLine: 115
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Database
  summary: "\nInternal class representing a SQL table reference like &quot;table_name table_alias&quot;\n"
  example: []
  syntax:
    content: 'public class StatementFromRef : object'
    content.vb: >-
      Public Class StatementFromRef
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Butterfly.Core.Database.StatementFromRef.joinType
  commentId: F:Butterfly.Core.Database.StatementFromRef.joinType
  id: joinType
  parent: Butterfly.Core.Database.StatementFromRef
  langs:
  - csharp
  - vb
  name: joinType
  nameWithType: StatementFromRef.joinType
  fullName: Butterfly.Core.Database.StatementFromRef.joinType
  type: Field
  source:
    remote:
      path: Butterfly.Core/Database/Statements/BaseStatement.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-server-dotnet
    id: joinType
    path: ../Butterfly.Core/Database/Statements/BaseStatement.cs
    startLine: 116
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Database
  syntax:
    content: public readonly JoinType joinType
    return:
      type: Butterfly.Core.Database.JoinType
    content.vb: Public ReadOnly joinType As JoinType
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Butterfly.Core.Database.StatementFromRef.table
  commentId: F:Butterfly.Core.Database.StatementFromRef.table
  id: table
  parent: Butterfly.Core.Database.StatementFromRef
  langs:
  - csharp
  - vb
  name: table
  nameWithType: StatementFromRef.table
  fullName: Butterfly.Core.Database.StatementFromRef.table
  type: Field
  source:
    remote:
      path: Butterfly.Core/Database/Statements/BaseStatement.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-server-dotnet
    id: table
    path: ../Butterfly.Core/Database/Statements/BaseStatement.cs
    startLine: 117
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Database
  syntax:
    content: public readonly Table table
    return:
      type: Butterfly.Core.Database.Table
    content.vb: Public ReadOnly table As Table
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Butterfly.Core.Database.StatementFromRef.tableAlias
  commentId: F:Butterfly.Core.Database.StatementFromRef.tableAlias
  id: tableAlias
  parent: Butterfly.Core.Database.StatementFromRef
  langs:
  - csharp
  - vb
  name: tableAlias
  nameWithType: StatementFromRef.tableAlias
  fullName: Butterfly.Core.Database.StatementFromRef.tableAlias
  type: Field
  source:
    remote:
      path: Butterfly.Core/Database/Statements/BaseStatement.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-server-dotnet
    id: tableAlias
    path: ../Butterfly.Core/Database/Statements/BaseStatement.cs
    startLine: 118
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Database
  syntax:
    content: public readonly string tableAlias
    return:
      type: System.String
    content.vb: Public ReadOnly tableAlias As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Butterfly.Core.Database.StatementFromRef.joinCondition
  commentId: F:Butterfly.Core.Database.StatementFromRef.joinCondition
  id: joinCondition
  parent: Butterfly.Core.Database.StatementFromRef
  langs:
  - csharp
  - vb
  name: joinCondition
  nameWithType: StatementFromRef.joinCondition
  fullName: Butterfly.Core.Database.StatementFromRef.joinCondition
  type: Field
  source:
    remote:
      path: Butterfly.Core/Database/Statements/BaseStatement.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-server-dotnet
    id: joinCondition
    path: ../Butterfly.Core/Database/Statements/BaseStatement.cs
    startLine: 119
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Database
  syntax:
    content: public readonly string joinCondition
    return:
      type: System.String
    content.vb: Public ReadOnly joinCondition As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Butterfly.Core.Database.StatementFromRef.#ctor(Butterfly.Core.Database.JoinType,Butterfly.Core.Database.Table,System.String,System.String)
  commentId: M:Butterfly.Core.Database.StatementFromRef.#ctor(Butterfly.Core.Database.JoinType,Butterfly.Core.Database.Table,System.String,System.String)
  id: '#ctor(Butterfly.Core.Database.JoinType,Butterfly.Core.Database.Table,System.String,System.String)'
  parent: Butterfly.Core.Database.StatementFromRef
  langs:
  - csharp
  - vb
  name: StatementFromRef(JoinType, Table, String, String)
  nameWithType: StatementFromRef.StatementFromRef(JoinType, Table, String, String)
  fullName: Butterfly.Core.Database.StatementFromRef.StatementFromRef(Butterfly.Core.Database.JoinType, Butterfly.Core.Database.Table, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Butterfly.Core/Database/Statements/BaseStatement.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-server-dotnet
    id: .ctor
    path: ../Butterfly.Core/Database/Statements/BaseStatement.cs
    startLine: 126
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Database
  syntax:
    content: public StatementFromRef(JoinType joinType, Table table, string tableAlias, string joinCondition)
    parameters:
    - id: joinType
      type: Butterfly.Core.Database.JoinType
    - id: table
      type: Butterfly.Core.Database.Table
    - id: tableAlias
      type: System.String
    - id: joinCondition
      type: System.String
    content.vb: Public Sub New(joinType As JoinType, table As Table, tableAlias As String, joinCondition As String)
  overload: Butterfly.Core.Database.StatementFromRef.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Butterfly.Core.Database.StatementFromRef.FIRST_TABLE_REGEX
  commentId: F:Butterfly.Core.Database.StatementFromRef.FIRST_TABLE_REGEX
  id: FIRST_TABLE_REGEX
  parent: Butterfly.Core.Database.StatementFromRef
  langs:
  - csharp
  - vb
  name: FIRST_TABLE_REGEX
  nameWithType: StatementFromRef.FIRST_TABLE_REGEX
  fullName: Butterfly.Core.Database.StatementFromRef.FIRST_TABLE_REGEX
  type: Field
  source:
    remote:
      path: Butterfly.Core/Database/Statements/BaseStatement.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-server-dotnet
    id: FIRST_TABLE_REGEX
    path: ../Butterfly.Core/Database/Statements/BaseStatement.cs
    startLine: 134
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Database
  syntax:
    content: protected static readonly Regex FIRST_TABLE_REGEX
    return:
      type: Regex
    content.vb: Protected Shared ReadOnly FIRST_TABLE_REGEX As Regex
  modifiers.csharp:
  - protected
  - static
  - readonly
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Butterfly.Core.Database.StatementFromRef.JOIN_REGEX
  commentId: F:Butterfly.Core.Database.StatementFromRef.JOIN_REGEX
  id: JOIN_REGEX
  parent: Butterfly.Core.Database.StatementFromRef
  langs:
  - csharp
  - vb
  name: JOIN_REGEX
  nameWithType: StatementFromRef.JOIN_REGEX
  fullName: Butterfly.Core.Database.StatementFromRef.JOIN_REGEX
  type: Field
  source:
    remote:
      path: Butterfly.Core/Database/Statements/BaseStatement.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-server-dotnet
    id: JOIN_REGEX
    path: ../Butterfly.Core/Database/Statements/BaseStatement.cs
    startLine: 137
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Database
  syntax:
    content: protected static readonly Regex JOIN_REGEX
    return:
      type: Regex
    content.vb: Protected Shared ReadOnly JOIN_REGEX As Regex
  modifiers.csharp:
  - protected
  - static
  - readonly
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Butterfly.Core.Database.StatementFromRef.ParseFromRefs(Butterfly.Core.Database.IDatabase,System.String)
  commentId: M:Butterfly.Core.Database.StatementFromRef.ParseFromRefs(Butterfly.Core.Database.IDatabase,System.String)
  id: ParseFromRefs(Butterfly.Core.Database.IDatabase,System.String)
  parent: Butterfly.Core.Database.StatementFromRef
  langs:
  - csharp
  - vb
  name: ParseFromRefs(IDatabase, String)
  nameWithType: StatementFromRef.ParseFromRefs(IDatabase, String)
  fullName: Butterfly.Core.Database.StatementFromRef.ParseFromRefs(Butterfly.Core.Database.IDatabase, System.String)
  type: Method
  source:
    remote:
      path: Butterfly.Core/Database/Statements/BaseStatement.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-server-dotnet
    id: ParseFromRefs
    path: ../Butterfly.Core/Database/Statements/BaseStatement.cs
    startLine: 139
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Database
  syntax:
    content: public static StatementFromRef[] ParseFromRefs(IDatabase database, string fromClause)
    parameters:
    - id: database
      type: Butterfly.Core.Database.IDatabase
    - id: fromClause
      type: System.String
    return:
      type: Butterfly.Core.Database.StatementFromRef[]
    content.vb: Public Shared Function ParseFromRefs(database As IDatabase, fromClause As String) As StatementFromRef()
  overload: Butterfly.Core.Database.StatementFromRef.ParseFromRefs*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Butterfly.Core.Database.StatementFromRef.ToString
  commentId: M:Butterfly.Core.Database.StatementFromRef.ToString
  id: ToString
  parent: Butterfly.Core.Database.StatementFromRef
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: StatementFromRef.ToString()
  fullName: Butterfly.Core.Database.StatementFromRef.ToString()
  type: Method
  source:
    remote:
      path: Butterfly.Core/Database/Statements/BaseStatement.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-server-dotnet
    id: ToString
    path: ../Butterfly.Core/Database/Statements/BaseStatement.cs
    startLine: 169
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Database
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: Butterfly.Core.Database.StatementFromRef.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Butterfly.Core.Database
  commentId: N:Butterfly.Core.Database
  name: Butterfly.Core.Database
  nameWithType: Butterfly.Core.Database
  fullName: Butterfly.Core.Database
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Butterfly.Core.Database.JoinType
  commentId: T:Butterfly.Core.Database.JoinType
  parent: Butterfly.Core.Database
  name: JoinType
  nameWithType: JoinType
  fullName: Butterfly.Core.Database.JoinType
- uid: Butterfly.Core.Database.Table
  commentId: T:Butterfly.Core.Database.Table
  parent: Butterfly.Core.Database
  name: Table
  nameWithType: Table
  fullName: Butterfly.Core.Database.Table
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Butterfly.Core.Database.StatementFromRef.#ctor*
  commentId: Overload:Butterfly.Core.Database.StatementFromRef.#ctor
  name: StatementFromRef
  nameWithType: StatementFromRef.StatementFromRef
  fullName: Butterfly.Core.Database.StatementFromRef.StatementFromRef
- uid: Regex
  isExternal: true
  name: Regex
  nameWithType: Regex
  fullName: Regex
- uid: Butterfly.Core.Database.StatementFromRef.ParseFromRefs*
  commentId: Overload:Butterfly.Core.Database.StatementFromRef.ParseFromRefs
  name: ParseFromRefs
  nameWithType: StatementFromRef.ParseFromRefs
  fullName: Butterfly.Core.Database.StatementFromRef.ParseFromRefs
- uid: Butterfly.Core.Database.IDatabase
  commentId: T:Butterfly.Core.Database.IDatabase
  parent: Butterfly.Core.Database
  name: IDatabase
  nameWithType: IDatabase
  fullName: Butterfly.Core.Database.IDatabase
- uid: Butterfly.Core.Database.StatementFromRef[]
  isExternal: true
  name: StatementFromRef[]
  nameWithType: StatementFromRef[]
  fullName: Butterfly.Core.Database.StatementFromRef[]
  nameWithType.vb: StatementFromRef()
  fullName.vb: Butterfly.Core.Database.StatementFromRef()
  name.vb: StatementFromRef()
  spec.csharp:
  - uid: Butterfly.Core.Database.StatementFromRef
    name: StatementFromRef
    nameWithType: StatementFromRef
    fullName: Butterfly.Core.Database.StatementFromRef
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Butterfly.Core.Database.StatementFromRef
    name: StatementFromRef
    nameWithType: StatementFromRef
    fullName: Butterfly.Core.Database.StatementFromRef
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Butterfly.Core.Database.StatementFromRef.ToString*
  commentId: Overload:Butterfly.Core.Database.StatementFromRef.ToString
  name: ToString
  nameWithType: StatementFromRef.ToString
  fullName: Butterfly.Core.Database.StatementFromRef.ToString
shouldSkipMarkup: true
