### YamlMime:ManagedReference
items:
- uid: Butterfly.Twilio.TwilioModule
  commentId: T:Butterfly.Twilio.TwilioModule
  id: TwilioModule
  parent: Butterfly.Twilio
  children:
  - Butterfly.Twilio.TwilioModule.Setup(Butterfly.Core.WebApi.IWebApi,Func{System.String,System.String,System.String,System.String[],Task{System.String}})
  langs:
  - csharp
  - vb
  name: TwilioModule
  nameWithType: TwilioModule
  fullName: Butterfly.Twilio.TwilioModule
  type: Class
  source:
    remote:
      path: Butterfly.Twilio/TwilioModule.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-server-dotnet
    id: TwilioModule
    path: ../Butterfly.Twilio/TwilioModule.cs
    startLine: 16
  assemblies:
  - Butterfly.Twilio
  namespace: Butterfly.Twilio
  syntax:
    content: 'public static class TwilioModule : object'
    content.vb: >-
      Public Module TwilioModule
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Butterfly.Twilio.TwilioModule.Setup(Butterfly.Core.WebApi.IWebApi,Func{System.String,System.String,System.String,System.String[],Task{System.String}})
  commentId: M:Butterfly.Twilio.TwilioModule.Setup(Butterfly.Core.WebApi.IWebApi,Func{System.String,System.String,System.String,System.String[],Task{System.String}})
  id: Setup(Butterfly.Core.WebApi.IWebApi,Func{System.String,System.String,System.String,System.String[],Task{System.String}})
  parent: Butterfly.Twilio.TwilioModule
  langs:
  - csharp
  - vb
  name: Setup(IWebApi, Func<String, String, String, String[], Task<String>>)
  nameWithType: TwilioModule.Setup(IWebApi, Func<String, String, String, String[], Task<String>>)
  fullName: Butterfly.Twilio.TwilioModule.Setup(Butterfly.Core.WebApi.IWebApi, Func<System.String, System.String, System.String, System.String[], Task<System.String>>)
  type: Method
  source:
    remote:
      path: Butterfly.Twilio/TwilioModule.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-server-dotnet
    id: Setup
    path: ../Butterfly.Twilio/TwilioModule.cs
    startLine: 19
  assemblies:
  - Butterfly.Twilio
  namespace: Butterfly.Twilio
  syntax:
    content: public static void Setup(IWebApi webApi, Func<string, string, string, string[], Task<string>> handler)
    parameters:
    - id: webApi
      type: Butterfly.Core.WebApi.IWebApi
    - id: handler
      type: Func{System.String,System.String,System.String,System.String[],Task{System.String}}
    content.vb: Public Shared Sub Setup(webApi As IWebApi, handler As Func(Of String, String, String, String(), Task(Of String)))
  overload: Butterfly.Twilio.TwilioModule.Setup*
  nameWithType.vb: TwilioModule.Setup(IWebApi, Func(Of String, String, String, String(), Task(Of String)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Butterfly.Twilio.TwilioModule.Setup(Butterfly.Core.WebApi.IWebApi, Func(Of System.String, System.String, System.String, System.String(), Task(Of System.String)))
  name.vb: Setup(IWebApi, Func(Of String, String, String, String(), Task(Of String)))
references:
- uid: Butterfly.Twilio
  commentId: N:Butterfly.Twilio
  name: Butterfly.Twilio
  nameWithType: Butterfly.Twilio
  fullName: Butterfly.Twilio
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Butterfly.Twilio.TwilioModule.Setup*
  commentId: Overload:Butterfly.Twilio.TwilioModule.Setup
  name: Setup
  nameWithType: TwilioModule.Setup
  fullName: Butterfly.Twilio.TwilioModule.Setup
- uid: Butterfly.Core.WebApi.IWebApi
  commentId: T:Butterfly.Core.WebApi.IWebApi
  parent: Butterfly.Core.WebApi
  name: IWebApi
  nameWithType: IWebApi
  fullName: Butterfly.Core.WebApi.IWebApi
- uid: Func{System.String,System.String,System.String,System.String[],Task{System.String}}
  commentId: '!:Func{System.String,System.String,System.String,System.String[],Task{System.String}}'
  definition: Func`5
  name: Func<String, String, String, String[], Task<String>>
  nameWithType: Func<String, String, String, String[], Task<String>>
  fullName: Func<System.String, System.String, System.String, System.String[], Task<System.String>>
  nameWithType.vb: Func(Of String, String, String, String(), Task(Of String))
  fullName.vb: Func(Of System.String, System.String, System.String, System.String(), Task(Of System.String))
  name.vb: Func(Of String, String, String, String(), Task(Of String))
  spec.csharp:
  - uid: Func`5
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`5
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Butterfly.Core.WebApi
  commentId: N:Butterfly.Core.WebApi
  name: Butterfly.Core.WebApi
  nameWithType: Butterfly.Core.WebApi
  fullName: Butterfly.Core.WebApi
- uid: Func`5
  commentId: '!:Func`5'
  isExternal: true
  name: Func<, , , , >
  nameWithType: Func<, , , , >
  fullName: Func<, , , , >
  nameWithType.vb: Func(Of , , , , )
  fullName.vb: Func(Of , , , , )
  name.vb: Func(Of , , , , )
  spec.csharp:
  - uid: Func`5
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`5
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
