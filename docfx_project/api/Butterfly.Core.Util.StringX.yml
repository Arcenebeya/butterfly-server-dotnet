### YamlMime:ManagedReference
items:
- uid: Butterfly.Core.Util.StringX
  commentId: T:Butterfly.Core.Util.StringX
  id: StringX
  parent: Butterfly.Core.Util
  children:
  - Butterfly.Core.Util.StringX.Abbreviate(System.String)
  - Butterfly.Core.Util.StringX.Hash(System.String)
  - Butterfly.Core.Util.StringX.SmartSplit(System.String,System.Char,System.Char,System.Char)
  langs:
  - csharp
  - vb
  name: StringX
  nameWithType: StringX
  fullName: Butterfly.Core.Util.StringX
  type: Class
  source:
    remote:
      path: Butterfly.Core/Util/StringX.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-server-dotnet
    id: StringX
    path: ../Butterfly.Core/Util/StringX.cs
    startLine: 11
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Util
  syntax:
    content: 'public static class StringX : object'
    content.vb: >-
      Public Module StringX
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Butterfly.Core.Util.StringX.Hash(System.String)
  commentId: M:Butterfly.Core.Util.StringX.Hash(System.String)
  id: Hash(System.String)
  isExtensionMethod: true
  parent: Butterfly.Core.Util.StringX
  langs:
  - csharp
  - vb
  name: Hash(String)
  nameWithType: StringX.Hash(String)
  fullName: Butterfly.Core.Util.StringX.Hash(System.String)
  type: Method
  source:
    remote:
      path: Butterfly.Core/Util/StringX.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-server-dotnet
    id: Hash
    path: ../Butterfly.Core/Util/StringX.cs
    startLine: 12
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Util
  syntax:
    content: public static string Hash(this string me)
    parameters:
    - id: me
      type: System.String
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Hash(me As String) As String
  overload: Butterfly.Core.Util.StringX.Hash*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Butterfly.Core.Util.StringX.Abbreviate(System.String)
  commentId: M:Butterfly.Core.Util.StringX.Abbreviate(System.String)
  id: Abbreviate(System.String)
  isExtensionMethod: true
  parent: Butterfly.Core.Util.StringX
  langs:
  - csharp
  - vb
  name: Abbreviate(String)
  nameWithType: StringX.Abbreviate(String)
  fullName: Butterfly.Core.Util.StringX.Abbreviate(System.String)
  type: Method
  source:
    remote:
      path: Butterfly.Core/Util/StringX.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-server-dotnet
    id: Abbreviate
    path: ../Butterfly.Core/Util/StringX.cs
    startLine: 21
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Util
  syntax:
    content: public static string Abbreviate(this string me)
    parameters:
    - id: me
      type: System.String
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Abbreviate(me As String) As String
  overload: Butterfly.Core.Util.StringX.Abbreviate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Butterfly.Core.Util.StringX.SmartSplit(System.String,System.Char,System.Char,System.Char)
  commentId: M:Butterfly.Core.Util.StringX.SmartSplit(System.String,System.Char,System.Char,System.Char)
  id: SmartSplit(System.String,System.Char,System.Char,System.Char)
  isExtensionMethod: true
  parent: Butterfly.Core.Util.StringX
  langs:
  - csharp
  - vb
  name: SmartSplit(String, Char, Char, Char)
  nameWithType: StringX.SmartSplit(String, Char, Char, Char)
  fullName: Butterfly.Core.Util.StringX.SmartSplit(System.String, System.Char, System.Char, System.Char)
  type: Method
  source:
    remote:
      path: Butterfly.Core/Util/StringX.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-server-dotnet
    id: SmartSplit
    path: ../Butterfly.Core/Util/StringX.cs
    startLine: 39
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Util
  syntax:
    content: public static string[] SmartSplit(this string me, char delimiter = ',', char openBracket = '(', char closeBracket = ')')
    parameters:
    - id: me
      type: System.String
    - id: delimiter
      type: System.Char
    - id: openBracket
      type: System.Char
    - id: closeBracket
      type: System.Char
    return:
      type: System.String[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SmartSplit(me As String, delimiter As Char = ","c, openBracket As Char = "("c, closeBracket As Char = ")"c) As String()
  overload: Butterfly.Core.Util.StringX.SmartSplit*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Butterfly.Core.Util
  commentId: N:Butterfly.Core.Util
  name: Butterfly.Core.Util
  nameWithType: Butterfly.Core.Util
  fullName: Butterfly.Core.Util
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Butterfly.Core.Util.StringX.Hash*
  commentId: Overload:Butterfly.Core.Util.StringX.Hash
  name: Hash
  nameWithType: StringX.Hash
  fullName: Butterfly.Core.Util.StringX.Hash
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Butterfly.Core.Util.StringX.Abbreviate*
  commentId: Overload:Butterfly.Core.Util.StringX.Abbreviate
  name: Abbreviate
  nameWithType: StringX.Abbreviate
  fullName: Butterfly.Core.Util.StringX.Abbreviate
- uid: Butterfly.Core.Util.StringX.SmartSplit*
  commentId: Overload:Butterfly.Core.Util.StringX.SmartSplit
  name: SmartSplit
  nameWithType: StringX.SmartSplit
  fullName: Butterfly.Core.Util.StringX.SmartSplit
- uid: System.Char
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
shouldSkipMarkup: true
