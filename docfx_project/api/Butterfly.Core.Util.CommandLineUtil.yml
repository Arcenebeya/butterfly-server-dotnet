### YamlMime:ManagedReference
items:
- uid: Butterfly.Core.Util.CommandLineUtil
  commentId: T:Butterfly.Core.Util.CommandLineUtil
  id: CommandLineUtil
  parent: Butterfly.Core.Util
  children:
  - Butterfly.Core.Util.CommandLineUtil.Build(Dictionary{System.String,System.String})
  - Butterfly.Core.Util.CommandLineUtil.Parse(System.String)
  langs:
  - csharp
  - vb
  name: CommandLineUtil
  nameWithType: CommandLineUtil
  fullName: Butterfly.Core.Util.CommandLineUtil
  type: Class
  source:
    remote:
      path: Butterfly.Core/Util/CommandLineUtil.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-server-dotnet
    id: CommandLineUtil
    path: ../Butterfly.Core/Util/CommandLineUtil.cs
    startLine: 10
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Util
  syntax:
    content: 'public static class CommandLineUtil : object'
    content.vb: >-
      Public Module CommandLineUtil
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Butterfly.Core.Util.CommandLineUtil.Parse(System.String)
  commentId: M:Butterfly.Core.Util.CommandLineUtil.Parse(System.String)
  id: Parse(System.String)
  parent: Butterfly.Core.Util.CommandLineUtil
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: CommandLineUtil.Parse(String)
  fullName: Butterfly.Core.Util.CommandLineUtil.Parse(System.String)
  type: Method
  source:
    remote:
      path: Butterfly.Core/Util/CommandLineUtil.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-server-dotnet
    id: Parse
    path: ../Butterfly.Core/Util/CommandLineUtil.cs
    startLine: 12
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Util
  syntax:
    content: public static Dictionary<string, string> Parse(string commandLine)
    parameters:
    - id: commandLine
      type: System.String
    return:
      type: Dictionary{System.String,System.String}
    content.vb: Public Shared Function Parse(commandLine As String) As Dictionary(Of String, String)
  overload: Butterfly.Core.Util.CommandLineUtil.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Butterfly.Core.Util.CommandLineUtil.Build(Dictionary{System.String,System.String})
  commentId: M:Butterfly.Core.Util.CommandLineUtil.Build(Dictionary{System.String,System.String})
  id: Build(Dictionary{System.String,System.String})
  parent: Butterfly.Core.Util.CommandLineUtil
  langs:
  - csharp
  - vb
  name: Build(Dictionary<String, String>)
  nameWithType: CommandLineUtil.Build(Dictionary<String, String>)
  fullName: Butterfly.Core.Util.CommandLineUtil.Build(Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Butterfly.Core/Util/CommandLineUtil.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-server-dotnet
    id: Build
    path: ../Butterfly.Core/Util/CommandLineUtil.cs
    startLine: 42
  assemblies:
  - Butterfly.Core
  namespace: Butterfly.Core.Util
  syntax:
    content: public static string Build(Dictionary<string, string> switches)
    parameters:
    - id: switches
      type: Dictionary{System.String,System.String}
    return:
      type: System.String
    content.vb: Public Shared Function Build(switches As Dictionary(Of String, String)) As String
  overload: Butterfly.Core.Util.CommandLineUtil.Build*
  nameWithType.vb: CommandLineUtil.Build(Dictionary(Of String, String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Butterfly.Core.Util.CommandLineUtil.Build(Dictionary(Of System.String, System.String))
  name.vb: Build(Dictionary(Of String, String))
references:
- uid: Butterfly.Core.Util
  commentId: N:Butterfly.Core.Util
  name: Butterfly.Core.Util
  nameWithType: Butterfly.Core.Util
  fullName: Butterfly.Core.Util
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Butterfly.Core.Util.CommandLineUtil.Parse*
  commentId: Overload:Butterfly.Core.Util.CommandLineUtil.Parse
  name: Parse
  nameWithType: CommandLineUtil.Parse
  fullName: Butterfly.Core.Util.CommandLineUtil.Parse
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Dictionary{System.String,System.String}
  commentId: '!:Dictionary{System.String,System.String}'
  definition: Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Butterfly.Core.Util.CommandLineUtil.Build*
  commentId: Overload:Butterfly.Core.Util.CommandLineUtil.Build
  name: Build
  nameWithType: CommandLineUtil.Build
  fullName: Butterfly.Core.Util.CommandLineUtil.Build
shouldSkipMarkup: true
