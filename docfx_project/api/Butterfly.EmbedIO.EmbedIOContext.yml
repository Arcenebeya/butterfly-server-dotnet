### YamlMime:ManagedReference
items:
- uid: Butterfly.EmbedIO.EmbedIOContext
  commentId: T:Butterfly.EmbedIO.EmbedIOContext
  id: EmbedIOContext
  parent: Butterfly.EmbedIO
  children:
  - Butterfly.EmbedIO.EmbedIOContext.#ctor(System.String,System.String)
  - Butterfly.EmbedIO.EmbedIOContext.Dispose
  - Butterfly.EmbedIO.EmbedIOContext.embedIOWebServer
  - Butterfly.EmbedIO.EmbedIOContext.Start
  - Butterfly.EmbedIO.EmbedIOContext.subscriptionApi
  - Butterfly.EmbedIO.EmbedIOContext.SubscriptionApi
  - Butterfly.EmbedIO.EmbedIOContext.webApi
  - Butterfly.EmbedIO.EmbedIOContext.WebApi
  langs:
  - csharp
  - vb
  name: EmbedIOContext
  nameWithType: EmbedIOContext
  fullName: Butterfly.EmbedIO.EmbedIOContext
  type: Class
  source:
    remote:
      path: Butterfly.EmbedIO/EmbedIOContext.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: EmbedIOContext
    path: ../Butterfly.EmbedIO/EmbedIOContext.cs
    startLine: 18
  assemblies:
  - Butterfly.EmbedIO
  namespace: Butterfly.EmbedIO
  summary: "\nConvenient class to initialize an IWebApi and ISubscriptionApi instance from a running EmbedIO.WebServer instance\n"
  example: []
  syntax:
    content: 'public class EmbedIOContext : IDisposable'
    content.vb: >-
      Public Class EmbedIOContext

          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Butterfly.EmbedIO.EmbedIOContext.embedIOWebServer
  commentId: F:Butterfly.EmbedIO.EmbedIOContext.embedIOWebServer
  id: embedIOWebServer
  parent: Butterfly.EmbedIO.EmbedIOContext
  langs:
  - csharp
  - vb
  name: embedIOWebServer
  nameWithType: EmbedIOContext.embedIOWebServer
  fullName: Butterfly.EmbedIO.EmbedIOContext.embedIOWebServer
  type: Field
  source:
    remote:
      path: Butterfly.EmbedIO/EmbedIOContext.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: embedIOWebServer
    path: ../Butterfly.EmbedIO/EmbedIOContext.cs
    startLine: 21
  assemblies:
  - Butterfly.EmbedIO
  namespace: Butterfly.EmbedIO
  syntax:
    content: protected readonly Unosquare.Labs.EmbedIO.WebServer embedIOWebServer
    return:
      type: Unosquare.Labs.EmbedIO.WebServer
    content.vb: Protected ReadOnly embedIOWebServer As Unosquare.Labs.EmbedIO.WebServer
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.EmbedIO.EmbedIOContext.webApi
  commentId: F:Butterfly.EmbedIO.EmbedIOContext.webApi
  id: webApi
  parent: Butterfly.EmbedIO.EmbedIOContext
  langs:
  - csharp
  - vb
  name: webApi
  nameWithType: EmbedIOContext.webApi
  fullName: Butterfly.EmbedIO.EmbedIOContext.webApi
  type: Field
  source:
    remote:
      path: Butterfly.EmbedIO/EmbedIOContext.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: webApi
    path: ../Butterfly.EmbedIO/EmbedIOContext.cs
    startLine: 22
  assemblies:
  - Butterfly.EmbedIO
  namespace: Butterfly.EmbedIO
  syntax:
    content: protected readonly IWebApi webApi
    return:
      type: Butterfly.Core.WebApi.IWebApi
    content.vb: Protected ReadOnly webApi As IWebApi
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.EmbedIO.EmbedIOContext.subscriptionApi
  commentId: F:Butterfly.EmbedIO.EmbedIOContext.subscriptionApi
  id: subscriptionApi
  parent: Butterfly.EmbedIO.EmbedIOContext
  langs:
  - csharp
  - vb
  name: subscriptionApi
  nameWithType: EmbedIOContext.subscriptionApi
  fullName: Butterfly.EmbedIO.EmbedIOContext.subscriptionApi
  type: Field
  source:
    remote:
      path: Butterfly.EmbedIO/EmbedIOContext.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: subscriptionApi
    path: ../Butterfly.EmbedIO/EmbedIOContext.cs
    startLine: 23
  assemblies:
  - Butterfly.EmbedIO
  namespace: Butterfly.EmbedIO
  syntax:
    content: protected readonly ISubscriptionApi subscriptionApi
    return:
      type: Butterfly.Core.Channel.ISubscriptionApi
    content.vb: Protected ReadOnly subscriptionApi As ISubscriptionApi
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.EmbedIO.EmbedIOContext.#ctor(System.String,System.String)
  commentId: M:Butterfly.EmbedIO.EmbedIOContext.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Butterfly.EmbedIO.EmbedIOContext
  langs:
  - csharp
  - vb
  name: EmbedIOContext(String, String)
  nameWithType: EmbedIOContext.EmbedIOContext(String, String)
  fullName: Butterfly.EmbedIO.EmbedIOContext.EmbedIOContext(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Butterfly.EmbedIO/EmbedIOContext.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: .ctor
    path: ../Butterfly.EmbedIO/EmbedIOContext.cs
    startLine: 25
  assemblies:
  - Butterfly.EmbedIO
  namespace: Butterfly.EmbedIO
  syntax:
    content: public EmbedIOContext(string url, string staticPath = null)
    parameters:
    - id: url
      type: System.String
    - id: staticPath
      type: System.String
    content.vb: Public Sub New(url As String, staticPath As String = Nothing)
  overload: Butterfly.EmbedIO.EmbedIOContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Butterfly.EmbedIO.EmbedIOContext.WebApi
  commentId: P:Butterfly.EmbedIO.EmbedIOContext.WebApi
  id: WebApi
  parent: Butterfly.EmbedIO.EmbedIOContext
  langs:
  - csharp
  - vb
  name: WebApi
  nameWithType: EmbedIOContext.WebApi
  fullName: Butterfly.EmbedIO.EmbedIOContext.WebApi
  type: Property
  source:
    remote:
      path: Butterfly.EmbedIO/EmbedIOContext.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: WebApi
    path: ../Butterfly.EmbedIO/EmbedIOContext.cs
    startLine: 47
  assemblies:
  - Butterfly.EmbedIO
  namespace: Butterfly.EmbedIO
  syntax:
    content: public IWebApi WebApi { get; }
    parameters: []
    return:
      type: Butterfly.Core.WebApi.IWebApi
    content.vb: Public ReadOnly Property WebApi As IWebApi
  overload: Butterfly.EmbedIO.EmbedIOContext.WebApi*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Butterfly.EmbedIO.EmbedIOContext.SubscriptionApi
  commentId: P:Butterfly.EmbedIO.EmbedIOContext.SubscriptionApi
  id: SubscriptionApi
  parent: Butterfly.EmbedIO.EmbedIOContext
  langs:
  - csharp
  - vb
  name: SubscriptionApi
  nameWithType: EmbedIOContext.SubscriptionApi
  fullName: Butterfly.EmbedIO.EmbedIOContext.SubscriptionApi
  type: Property
  source:
    remote:
      path: Butterfly.EmbedIO/EmbedIOContext.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: SubscriptionApi
    path: ../Butterfly.EmbedIO/EmbedIOContext.cs
    startLine: 48
  assemblies:
  - Butterfly.EmbedIO
  namespace: Butterfly.EmbedIO
  syntax:
    content: public ISubscriptionApi SubscriptionApi { get; }
    parameters: []
    return:
      type: Butterfly.Core.Channel.ISubscriptionApi
    content.vb: Public ReadOnly Property SubscriptionApi As ISubscriptionApi
  overload: Butterfly.EmbedIO.EmbedIOContext.SubscriptionApi*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Butterfly.EmbedIO.EmbedIOContext.Start
  commentId: M:Butterfly.EmbedIO.EmbedIOContext.Start
  id: Start
  parent: Butterfly.EmbedIO.EmbedIOContext
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: EmbedIOContext.Start()
  fullName: Butterfly.EmbedIO.EmbedIOContext.Start()
  type: Method
  source:
    remote:
      path: Butterfly.EmbedIO/EmbedIOContext.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: Start
    path: ../Butterfly.EmbedIO/EmbedIOContext.cs
    startLine: 50
  assemblies:
  - Butterfly.EmbedIO
  namespace: Butterfly.EmbedIO
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: Butterfly.EmbedIO.EmbedIOContext.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Butterfly.EmbedIO.EmbedIOContext.Dispose
  commentId: M:Butterfly.EmbedIO.EmbedIOContext.Dispose
  id: Dispose
  parent: Butterfly.EmbedIO.EmbedIOContext
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: EmbedIOContext.Dispose()
  fullName: Butterfly.EmbedIO.EmbedIOContext.Dispose()
  type: Method
  source:
    remote:
      path: Butterfly.EmbedIO/EmbedIOContext.cs
      branch: master
      repo: https://github.com/firesharkstudios/Butterfly.git
    id: Dispose
    path: ../Butterfly.EmbedIO/EmbedIOContext.cs
    startLine: 59
  assemblies:
  - Butterfly.EmbedIO
  namespace: Butterfly.EmbedIO
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Butterfly.EmbedIO.EmbedIOContext.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Butterfly.EmbedIO
  commentId: N:Butterfly.EmbedIO
  name: Butterfly.EmbedIO
  nameWithType: Butterfly.EmbedIO
  fullName: Butterfly.EmbedIO
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Unosquare.Labs.EmbedIO.WebServer
  isExternal: true
  name: Unosquare.Labs.EmbedIO.WebServer
  nameWithType: Unosquare.Labs.EmbedIO.WebServer
  fullName: Unosquare.Labs.EmbedIO.WebServer
- uid: Butterfly.Core.WebApi.IWebApi
  commentId: T:Butterfly.Core.WebApi.IWebApi
  parent: Butterfly.Core.WebApi
  name: IWebApi
  nameWithType: IWebApi
  fullName: Butterfly.Core.WebApi.IWebApi
- uid: Butterfly.Core.WebApi
  commentId: N:Butterfly.Core.WebApi
  name: Butterfly.Core.WebApi
  nameWithType: Butterfly.Core.WebApi
  fullName: Butterfly.Core.WebApi
- uid: Butterfly.Core.Channel.ISubscriptionApi
  commentId: T:Butterfly.Core.Channel.ISubscriptionApi
  parent: Butterfly.Core.Channel
  name: ISubscriptionApi
  nameWithType: ISubscriptionApi
  fullName: Butterfly.Core.Channel.ISubscriptionApi
- uid: Butterfly.Core.Channel
  commentId: N:Butterfly.Core.Channel
  name: Butterfly.Core.Channel
  nameWithType: Butterfly.Core.Channel
  fullName: Butterfly.Core.Channel
- uid: Butterfly.EmbedIO.EmbedIOContext.#ctor*
  commentId: Overload:Butterfly.EmbedIO.EmbedIOContext.#ctor
  name: EmbedIOContext
  nameWithType: EmbedIOContext.EmbedIOContext
  fullName: Butterfly.EmbedIO.EmbedIOContext.EmbedIOContext
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Butterfly.EmbedIO.EmbedIOContext.WebApi*
  commentId: Overload:Butterfly.EmbedIO.EmbedIOContext.WebApi
  name: WebApi
  nameWithType: EmbedIOContext.WebApi
  fullName: Butterfly.EmbedIO.EmbedIOContext.WebApi
- uid: Butterfly.EmbedIO.EmbedIOContext.SubscriptionApi*
  commentId: Overload:Butterfly.EmbedIO.EmbedIOContext.SubscriptionApi
  name: SubscriptionApi
  nameWithType: EmbedIOContext.SubscriptionApi
  fullName: Butterfly.EmbedIO.EmbedIOContext.SubscriptionApi
- uid: Butterfly.EmbedIO.EmbedIOContext.Start*
  commentId: Overload:Butterfly.EmbedIO.EmbedIOContext.Start
  name: Start
  nameWithType: EmbedIOContext.Start
  fullName: Butterfly.EmbedIO.EmbedIOContext.Start
- uid: Butterfly.EmbedIO.EmbedIOContext.Dispose*
  commentId: Overload:Butterfly.EmbedIO.EmbedIOContext.Dispose
  name: Dispose
  nameWithType: EmbedIOContext.Dispose
  fullName: Butterfly.EmbedIO.EmbedIOContext.Dispose
shouldSkipMarkup: true
